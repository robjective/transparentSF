--
-- PostgreSQL database dump
--

-- Dumped from database version 14.17 (Homebrew)
-- Dumped by pg_dump version 14.17 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: metrics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.metrics (
    id integer NOT NULL,
    metric_name text NOT NULL,
    metric_key text NOT NULL,
    category text NOT NULL,
    subcategory text,
    endpoint text NOT NULL,
    summary text,
    definition text,
    data_sf_url text,
    ytd_query text,
    metric_query text,
    dataset_title text,
    dataset_category text,
    show_on_dash boolean DEFAULT true,
    item_noun text DEFAULT 'Items'::text,
    greendirection text DEFAULT 'up'::text,
    location_fields jsonb DEFAULT '[]'::jsonb,
    category_fields jsonb DEFAULT '[]'::jsonb,
    metadata jsonb DEFAULT '{}'::jsonb,
    city_id integer,
    display_order integer DEFAULT 1000,
    is_active boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    most_recent_data_date date
);


ALTER TABLE public.metrics OWNER TO postgres;

--
-- Name: COLUMN metrics.most_recent_data_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.metrics.most_recent_data_date IS 'The most recent data date available for this metric, updated daily during dashboard generation';


--
-- Name: metrics_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.metrics_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.metrics_id_seq OWNER TO postgres;

--
-- Name: metrics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.metrics_id_seq OWNED BY public.metrics.id;


--
-- Name: metrics id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metrics ALTER COLUMN id SET DEFAULT nextval('public.metrics_id_seq'::regclass);


--
-- Data for Name: metrics; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (2, '🚨 Violent Crime Incidents', 'violent_violent_crime_incidents_2', 'crime', 'Crime', 'wg3w-h783', 'Count of reported violent crime incidents, including assaults, homicides, rapes, robberies, human trafficking, weapons offenses, and offenses against family/children.', 'Count of reported violent crime incidents. Violent crimes are defined as incidents categorized as: Assault, Homicide, Rape, Robbery, Human Trafficking (Commercial Sex Acts and Involuntary Servitude), Offences Against The Family And Children, and Weapons Offenses.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') GROUP BY date ORDER BY date', 'SELECT ''Violent Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', 'Police Reports Violent Crime', 'crime', true, 'Incidents', 'down', '[]', '[{"name": "report_type_description", "fieldName": "report_type_description", "description": "Selected column for metric analysis"}, {"name": "incident_category", "fieldName": "incident_category", "description": "Selected column for metric analysis"}, {"name": "incident_subcategory", "fieldName": "incident_subcategory", "description": "Selected column for metric analysis"}, {"name": "analysis_neighborhood", "fieldName": "analysis_neighborhood", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{"map_filters": {"date_field": "Report_Datetime", "incident_category_filter": {"field": "Incident_Category", "values": ["Assault", "Homicide", "Rape", "Robbery", "Human Trafficking (A), Commercial Sex Acts", "Human Trafficking, Commercial Sex Acts", "Human Trafficking (B), Involuntary Servitude", "Offences Against The Family And Children", "Weapons Carrying Etc", "Weapons Offense", "Weapons Offence"], "operator": "IN"}}}', 2, 2, true, '2025-05-27 20:34:15.325786', '2025-08-10 18:41:41.661185', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (39, '🚨 Violent Crime Incidents - Castro/Upper Market', 'violent_crime_castro_upper_market', 'crime', '', 'wg3w-h783', 'Count of reported violent crime incidents in the Castro/Upper Market neighborhood.', 'Count of reported violent crime incidents in the Castro/Upper Market neighborhood. Violent crimes include Assault, Homicide, Rape, Robbery, Human Trafficking (Commercial Sex Acts and Involuntary Servitude), Offences Against The Family And Children, and Weapons Offenses.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= ''2023-01-01'' AND Report_Datetime < ''2023-10-01'' AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood=''Castro/Upper Market'' GROUP BY date ORDER BY date', 'SELECT ''Violent Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= ''2023-01-01'' AND Report_Datetime < ''2023-10-01'' AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood=''Castro/Upper Market'' THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= ''2022-01-01'' AND Report_Datetime < ''2023-01-01'' AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood=''Castro/Upper Market'' THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= ''2023-01-01'' AND Report_Datetime < ''2023-10-01'' AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood=''Castro/Upper Market'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= ''2022-01-01'' AND Report_Datetime < ''2023-01-01'' AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood=''Castro/Upper Market'' THEN 1 END)) as delta', 'Police Reports Violent Crime', 'crime', false, 'Incidents', 'down', '[]', '[]', '{}', NULL, 1000, false, '2025-08-01 12:21:19.155326', '2025-08-05 13:19:32.144389', '2025-07-31');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (10, '🚑 Overdose-Related 911 Calls', 'overdose_related_911_calls', 'safety', '', 'ed3a-sn39', 'Count of overdose-related 911 calls received by Emergency Medical Services weekly.', 'Tracks the number of 911 calls associated with opioid overdoses, as responded to by EMS. Reflects reported data based on patient care records at scene.', 'https://data.sfgov.org/d/ed3a-sn39', 'SELECT date_trunc_ymd(week_start_date) AS date, sum(total_overdose_related_911_calls) AS value WHERE week_start_date >= last_year_start AND week_start_date <= current_date GROUP BY date ORDER BY date', 'SELECT ''Overdose 911 Calls'' as label, max(week_start_date) as max_date, sum(CASE WHEN week_start_date >= this_year_start AND week_start_date <= this_year_end THEN total_overdose_related_911_calls END) as this_year, sum(CASE WHEN week_start_date >= last_year_start AND week_start_date <= last_year_end THEN total_overdose_related_911_calls END) as last_year, (sum(CASE WHEN week_start_date >= this_year_start AND week_start_date <= this_year_end THEN total_overdose_related_911_calls END) - sum(CASE WHEN week_start_date >= last_year_start AND week_start_date <= last_year_end THEN total_overdose_related_911_calls END)) as delta, ((sum(CASE WHEN week_start_date >= this_year_start AND week_start_date <= this_year_end THEN total_overdose_related_911_calls END) - sum(CASE WHEN week_start_date >= last_year_start AND week_start_date <= last_year_end THEN total_overdose_related_911_calls END)) * 100.0 / NULLIF(sum(CASE WHEN week_start_date >= last_year_start AND week_start_date <= last_year_end THEN total_overdose_related_911_calls END), 0)) as perc_diff', 'Overdose-Related 911 Calls by EMS', 'safety', false, 'Calls', 'down', '[]', '[]', '{}', 2, 10, true, '2025-05-28 14:03:45.008106', '2025-08-08 15:57:05.396175', '2025-07-06');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (15, '🔥 Fire Incidents', 'fire_fire_incidents_ytd_8', 'safety', 'fire', 'wr8u-xric', 'Count of all non-medical incidents to which the SF Fire Department responded.', 'Fire Incidents includes a summary of each (non-medical) incident to which the SF Fire Department responded. Each incident record includes the call number, incident number, address, number and type of each unit responding, call type (as determined by dispatch), prime situation (field observation), actions taken, and property loss.', 'https://data.sfgov.org/resource/wr8u-xric.json', 'SELECT date_trunc_ymd(incident_date) as date, COUNT(*) as value WHERE incident_date >= last_year_start AND incident_date <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Fire Incidents'' as label, max(incident_date) as max_date, COUNT(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', 'Fire incidents', 'safety', true, 'Incidents', 'down', '[]', '[{"name": "area_of_fire_origin", "fieldName": "area_of_fire_origin", "description": "Selected column for enhanced dashboard queries"}, {"name": "ignition_cause", "fieldName": "ignition_cause", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 8, "original_category": "safety", "original_subcategory": "fire", "original_subsubcategory": null}', 2, 12, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:57:58.63926', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (16, '🚒 Fire Fatalities', 'fatalities_fire_fatalities_ytd_9', 'safety', 'fire', 'wr8u-xric', 'Total count of fire-related fatalities, including both civilian and fire personnel fatalities.', 'Combines both fire fatalities (fire personnel) and civilian fatalities that occurred during fire incidents. Data is collected and reported by the SF Fire Department for each incident.', 'https://data.sfgov.org/resource/wr8u-xric.json', 'SELECT date_trunc_ymd(incident_date) as date, sum(fire_fatalities + civilian_fatalities) as value WHERE incident_date >= last_year_start AND incident_date <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Fatalities'' as label, max(incident_date) as max_date, SUM(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN fire_fatalities + civilian_fatalities END) as this_year, SUM(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN fire_fatalities + civilian_fatalities END) as last_year, (SUM(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN fire_fatalities + civilian_fatalities END) - SUM(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN fire_fatalities + civilian_fatalities END)) as delta, ((SUM(CASE WHEN incident_date >= this_year_start AND incident_date <= this_year_end THEN fire_fatalities + civilian_fatalities END) - SUM(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN fire_fatalities + civilian_fatalities END)) * 100.0 / NULLIF(SUM(CASE WHEN incident_date >= last_year_start AND incident_date <= last_year_end THEN fire_fatalities + civilian_fatalities END), 0)) as perc_diff, supervisor_district group by supervisor_district', 'Fire fatalitites', 'safety', true, 'Fatalities', 'down', '[]', '[{"name": "area_of_fire_origin", "fieldName": "area_of_fire_origin", "description": "Selected column for enhanced dashboard queries"}, {"name": "ignition_cause", "fieldName": "ignition_cause", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 9, "original_category": "safety", "original_subcategory": "fire", "original_subsubcategory": null}', 2, 14, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:58:26.19926', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (13, '🏠 New Housing Units Completed', 'property_new_housing_units_completed_13', 'Housing and Homelessness', 'housing', 'j67f-aayr', 'Count of net new housing units from completed building permits.', 'Tracks net new housing units that have been certified for occupancy through building permits. Each record represents when new units were approved for occupancy via Initial TCO, Amended TCO, or Certificate of Final Completion (CFC).', 'https://data.sfgov.org/Housing-and-Buildings/Dwelling-Unit-Completion-Counts-by-Building-Permit/j67f-aayr', 'SELECT date_trunc_ym(date_issued) as date, SUM(number_of_units_certified) as value WHERE date_issued >= last_year_start AND date_issued <= current_date GROUP BY date ORDER BY date', 'SELECT ''🏗️🏠 New Housing Units'' as label, max(date_issued) as max_date, SUM(CASE WHEN date_trunc_ym(date_issued) >= this_year_start AND date_trunc_ym(date_issued) <= this_year_end THEN number_of_units_certified END) as this_year, SUM(CASE WHEN date_trunc_ym(date_issued) >= last_year_start AND date_trunc_ym(date_issued) <= last_year_end THEN number_of_units_certified END) as last_year, (SUM(CASE WHEN date_trunc_ym(date_issued) >= this_year_start AND date_trunc_ym(date_issued) <= this_year_end THEN number_of_units_certified END) - SUM(CASE WHEN date_trunc_ym(date_issued) >= last_year_start AND date_trunc_ym(date_issued) <= last_year_end THEN number_of_units_certified END)) as delta, ((SUM(CASE WHEN date_trunc_ym(date_issued) >= this_year_start AND date_trunc_ym(date_issued) <= this_year_end THEN number_of_units_certified END) - SUM(CASE WHEN date_trunc_ym(date_issued) >= last_year_start AND date_trunc_ym(date_issued) <= last_year_end THEN number_of_units_certified END)) * 100.0 / NULLIF(SUM(CASE WHEN date_trunc_ym(date_issued) >= last_year_start AND date_trunc_ym(date_issued) <= last_year_end THEN number_of_units_certified END), 0)) as perc_diff', 'Dwelling Unit Completion Counts by Building Permit', 'Housing and Buildings', true, 'Units', 'up', '[]', '[]', '{"id": 13, "original_category": "economy", "original_subcategory": "housing", "original_subsubcategory": null}', 2, 13, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:03:30.673729', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (30, '🏚️ Homeless Concerns 311 cases', '311_homelessness_supportive_housing', 'Housing and Homelessness', 'service_subtype', 'vw6y-z8j6', 'Tracks 311 cases related to homelessness and supportive housing activities.', 'Total count of 311 cases concerning homelessness and encampments.', 'https://data.sfgov.org/City-Infrastructure/311-Cases/vw6y-z8j6', 'SELECT date_trunc_ymd(requested_datetime) as date, COUNT(*) as value WHERE requested_datetime >= last_year_start AND requested_datetime <= current_date AND (service_name in (''Encampments'',''Encampment'') or service_subtype in (''encampment'',''Encampment'',''Encampments'',''homelessness_and_supportive_housing'')) GROUP BY date ORDER BY date', 'SELECT ''Homeless Concern - 311 cases'' AS label, MAX(requested_datetime) AS max_date, COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) AS this_year, COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END) AS last_year, (COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END)) AS delta, ((COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END), 0)) AS perc_diff, floor(supervisor_district) as supervisor_district where (service_name in (''Encampments'',''Encampment'') or service_subtype in (''encampment'',''Encampment'',''Encampments'',''homelessness_and_supportive_housing'')) GROUP BY floor(supervisor_district)', '311 Cases Dataset', 'safety', true, 'Cases', 'down', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Supervisor district where the incident occurred"}]', '[{"name": "agency_responsible", "fieldName": "agency_responsible", "description": "Selected column for metric analysis"}, {"name": "service_name", "fieldName": "service_name", "description": "Selected column for metric analysis"}, {"name": "service_subtype", "fieldName": "service_subtype", "description": "Selected column for metric analysis"}, {"name": "service_details", "fieldName": "service_details", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}, {"name": "analysis_neighborhood", "fieldName": "analysis_neighborhood", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-07-05 13:39:15.964904', '2025-08-08 16:03:41.331643', '2025-08-06');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (23, '🚦 Traffic Related 911 Calls', 'traffic_related_911_calls', 'Traffic', '', '2zdj-bwza', 'Count of all 911 calls related to traffic incidents, with an added touch of efficiency.', 'This metric tracks the number of 911 calls related to traffic incidents, specifically including violations, citations, and stops. ', 'https://data.sfgov.org/Public-Safety/911-Emergency-Response-Calls-Data/2zdj-bwza', 'SELECT date_trunc_ymd(received_datetime) as date, COUNT(*) as value WHERE received_datetime >= last_year_start AND received_datetime <= current_date AND call_type_final IN (''585'', ''587'', ''585'') GROUP BY date ORDER BY date', 'SELECT ''Traffic Related 911 Calls'' as label, max(received_datetime) as max_date, COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END) as this_year, COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END) as last_year, (COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END) - COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END)) as delta, ((COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END) - COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final IN (''585'', ''587'') THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', '911 Emergency Response Calls Data', 'Traffic', true, 'Traffic Calls', 'down', '"[{\"name\": \"supervisor_district\", \"fieldName\": \"supervisor_district\", \"description\": \"Supervisor district where the call was made\"}]"', '[{"name": "call_type_final_desc", "fieldName": "call_type_final_desc", "description": "Selected column for metric analysis"}, {"name": "agency", "fieldName": "agency", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 9, true, '2025-06-01 17:54:01.932097', '2025-08-08 16:02:18.479566', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (35, '📜 Eviction Notices', 'eviction_notices', 'Housing and Homelessness', 'housing', '5cei-gny5', 'Tracks the monthly count of eviction notices filed in San Francisco.', 'Counts of eviction notices filed with the Rent Board. This does not necessarily mean an eviction took place, as not all notices result in eviction.', 'https://data.sfgov.org/Housing-and-Buildings/Eviction-Notices/5cei-gny5', 'select count(*) as value, date_trunc_ym(file_date) as date where file_date>= last_year_start and file_date<= current_date group by date order by date desc', 'SELECT ''Eviction Notices'' as label, COUNT(CASE WHEN file_date >= this_year_start AND file_date < this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN file_date >= last_year_start AND file_date < last_year_end THEN 1 END) as last_year, COUNT(CASE WHEN file_date >= this_year_start AND file_date < this_year_end THEN 1 END) - COUNT(CASE WHEN file_date >= last_year_start AND file_date < last_year_end THEN 1 END) as delta, (COUNT(CASE WHEN file_date >= this_year_start AND file_date < this_year_end THEN 1 END) - COUNT(CASE WHEN file_date >= last_year_start AND file_date < last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN file_date >= last_year_start AND file_date < last_year_end THEN 1 END), 0) as perc_diff GROUP BY label', 'Eviction Notices', 'Housing and Homelessness', true, 'Notices', 'down', '[]', '[{"name": "non_payment", "fieldName": "non_payment", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 15, true, '2025-07-21 09:25:15.890966', '2025-08-05 19:01:06.006932', NULL);
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (17, '🚫 Business Closures', 'closures_business_closures_15', 'economy', 'business', 'g8m3-pdis', 'Count of business closures in San Francisco.', 'Tracks business closures through the Treasurer & Tax Collector''s Office. Includes businesses that have formally closed or been administratively closed after 3 years of no filing or communication.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_end_date) as date, COUNT(*) as value WHERE dba_end_date >= last_year_start AND dba_end_date <= current_date AND administratively_closed is null GROUP BY date ORDER BY date', 'SELECT ''Business Closures'' as label, max(dba_end_date) as max_date, COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND administratively_closed is null THEN 1 END) as this_year, COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND administratively_closed is null THEN 1 END) as last_year, (COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND administratively_closed is null THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND administratively_closed is null THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND administratively_closed is null THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district ', '', '', true, 'Closures', 'down', '[]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}, {"name": "business_corridor", "fieldName": "business_corridor", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 15, "original_category": "economy", "original_subcategory": "business", "original_subsubcategory": null}', 2, 17, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:04:29.896961', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (4, '💊 Drug Crime Incidents', 'drug_drug_crime_incidents_4', 'crime', 'Crime', 'wg3w-h783', 'Count of reported drug crime incidents, including drug offenses and drug violations.', 'Drug crimes are defined as incidents categorized as: Drug Offense and Drug Violation.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') GROUP BY date ORDER BY date', 'SELECT ''Drug Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Drug Offense'', ''Drug Violation'') THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', '', '', true, 'Incidents', 'down', '[]', '[{"name": "report_type_description", "fieldName": "report_type_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "incident_category", "fieldName": "incident_category", "description": "Selected column for enhanced dashboard queries"}, {"name": "incident_subcategory", "fieldName": "incident_subcategory", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 4, "original_category": "crime", "original_subcategory": "Crime", "original_subsubcategory": null}', 2, 4, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:55:12.174645', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (5, '🔒 Jail Bookings', 'jail_jail_bookings_5', 'crime', 'jail', 'pfbp-75pz', 'Total count of individuals booked into San Francisco City and County Jail.', 'Tracks the total number of jail bookings. Each booking represents when an individual is processed into jail custody after arrest. The booking process includes recording personal information, fingerprinting, and photographing. A single person may have multiple bookings.', 'https://data.sfgov.org/Public-Safety/Sheriff-Jail-Bookings-by-Age-Group/pfbp-75pz', 'SELECT date_trunc_ym(month_and_year_of_booking) as date, SUM(count_of_bookings) as value WHERE month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Bookings'' as label, max(month_and_year_of_booking) as max_date, SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_bookings END) as this_year, SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_bookings END) as last_year, (SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_bookings END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_bookings END)) as delta, ((SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_bookings END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_bookings END)) * 100.0 / NULLIF(SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_bookings END), 0)) as perc_diff', 'Sheriff Jail Bokings', 'Crime', false, 'Bookings', 'down', '[]', '[{"name": "age_group", "fieldName": "age_group", "description": "Age range of the booked individual"}]', '{"id": 5, "original_category": "crime", "original_subcategory": "jail", "original_subsubcategory": null}', 2, 5, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:55:30.759115', '2025-07-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (6, '🚓 Arrests Presented to DA', 'arrests_arrests_presented_to_da_6', 'crime', 'DA', 'czsm-3ei3', 'Total count of arrests presented to the District Attorney''s office for review.', 'Count of all arrests presented to the District Attorney''s office for review. Each record represents an arrest that has been presented to the SFDA for a charging decision, regardless of the final action taken.', 'https://data.sfgov.org/Public-Safety/District-Attorney-Actions-Taken-on-Arrests-Present/czsm-3ei3', 'SELECT date_trunc_ymd(arrest_date) as date, COUNT(*) as value WHERE arrest_date >= last_year_start AND arrest_date <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Arrests Presented'' as label, max(arrest_date) as max_date, COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end THEN 1 END), 0)) as perc_diff', 'Sherriff Arrest ', 'crime', true, 'Arrests', 'up', '[]', '[{"name": "arresting_agency", "fieldName": "arresting_agency", "description": "Selected column for enhanced dashboard queries"}, {"name": "crime_type", "fieldName": "crime_type", "description": "Selected column for enhanced dashboard queries"}, {"name": "booked_case_type", "fieldName": "booked_case_type", "description": "Selected column for enhanced dashboard queries"}, {"name": "da_action_taken", "fieldName": "da_action_taken", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 6, "original_category": "crime", "original_subcategory": "DA", "original_subsubcategory": null}', 2, 6, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:55:35.141047', '2025-08-02');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (29, '💀 Homicides', 'homicides', 'crime', '', 'wg3w-h783', 'Count of reported homicide incidents.', 'Count of reported incidents specifically categorized as Homicide from the police department incident reports.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category = ''Homicide'' GROUP BY date ORDER BY date', 'SELECT ''Homicide'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category = ''Homicide'' THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category = ''Homicide'' THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category = ''Homicide'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category = ''Homicide'' THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category = ''Homicide'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category = ''Homicide'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category = ''Homicide'' THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', 'Police Department Incident Reports', 'Public Safety', false, 'Incidents', 'down', '"[{\"name\": \"supervisor_district\", \"fieldName\": \"supervisor_district\", \"description\": \"Supervisor district where the incident occurred\"}]"', '[{"name": "incident_description", "fieldName": "incident_description", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-06-24 15:11:46.464277', '2025-08-08 15:55:59.24356', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (12, '🛍️ New Retail Registrations', 'retail_new_retail_registrations_16', 'economy', 'business', 'g8m3-pdis', 'Count of new retail business registrations in San Francisco.', 'Tracks new retail business registrations through the Treasurer & Tax Collector''s Office. Uses NAICS code to identify retail businesses. Each registered business may have multiple locations.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_start_date) as date, COUNT(*) as value WHERE dba_start_date >= last_year_start AND dba_start_date <= current_date AND naic_code_description = ''Retail Trade'' GROUP BY date ORDER BY date', 'SELECT ''New Retail Registrations'' as label, max(dba_start_date) as max_date, COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END) as this_year, COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END) as last_year, (COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND naic_code_description = ''Retail Trade'' THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district ', '', '', true, 'Registrations', 'up', '[]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}, {"name": "business_corridor", "fieldName": "business_corridor", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 16, "original_category": "economy", "original_subcategory": "business", "original_subsubcategory": null}', 2, 18, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:04:52.598139', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (33, '⏳ Arrest to Conviction (days)', 'average_age_cases_da', 'crime', '', 'ynfy-z5kt', 'Average age (in days) of cases from arrest to DA action taken, calculated by breaking down date components and aggregating their differences.', 'Calculates the average duration (in days) from arrest to a DA action being recorded using date component extraction.', 'https://data.sfgov.org/Public-Safety/District-Attorney-Actions-Taken-on-Arrests-Presented/czsm-3ei3', 'SELECT date_trunc_ymd(disposition_date) as date, AVG((date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date))) as value WHERE disposition_date >= last_year_start AND disposition_date < current_date AND arrest_date IS NOT NULL AND disposition_date IS NOT NULL AND arrest_date < disposition_date AND case_status LIKE ''%Conviction%'' GROUP BY date_trunc_ymd(disposition_date)', 'SELECT ''Arrest to Conviction Time'' as label, MAX(disposition_date) as max_date, AVG(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END) as this_year, AVG(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END) as last_year, (AVG(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END) - AVG(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END)) as delta, ((AVG(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END) - AVG(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END)) * 100.0 / NULLIF(AVG(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end THEN (date_extract_y(disposition_date) - date_extract_y(arrest_date)) * 365 + (date_extract_m(disposition_date) - date_extract_m(arrest_date)) * 30 + (date_extract_d(disposition_date) - date_extract_d(arrest_date)) END), 0)) as perc_diff WHERE disposition_date IS NOT NULL AND arrest_date IS NOT NULL AND arrest_date < disposition_date AND case_status LIKE ''%Conviction%''', 'District Attorney Actions Taken on Arrests Presented', 'Public Safety', false, 'Days', 'down', '[]', '[]', '{}', NULL, 1000, true, '2025-07-14 22:05:09.393421', '2025-08-08 15:55:42.354587', '2025-08-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (36, 'Castro Violent Crime', 'castro_violent_crime', 'crime', 'Crime', 'wg3w-h783', 'Count of reported violent crime incidents in the Castro neighborhood, including assaults, homicides, rapes, robberies, human trafficking, weapons offenses, and offenses against family/children.', 'Violent crimes in the Castro neighborhood include incidents categorized as: Assault, Homicide, Rape, Robbery, Human Trafficking (Commercial Sex Acts and Involuntary Servitude), Offences Against The Family And Children, and Weapons Offenses.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' GROUP BY date ORDER BY date', 'SELECT ''Castro Violent Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro'' THEN 1 END), 0)) as perc_diff, analysis_neighborhood group by analysis_neighborhood', 'Police Department Incident Reports', 'Public Safety', true, 'Incidents', 'down', '"[{\"name\": \"analysis_neighborhood\", \"fieldName\": \"analysis_neighborhood\", \"description\": \"Neighborhood in which the incident occurred\"}]"', '"[{\"name\": \"incident_category\", \"fieldName\": \"incident_category\", \"description\": \"Category of the incident\"}]"', '{}', NULL, 1000, false, '2025-07-26 10:06:40.43478', '2025-08-05 13:19:32.144389', '2025-07-30');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (18, '🏪 Retail Closures', 'retail_closures_retail_closures_17', 'economy', 'business', 'g8m3-pdis', 'Count of retail business closures in San Francisco.', 'Tracks retail business closures through the Treasurer & Tax Collector''s Office. Uses NAICS code to identify retail businesses. Includes businesses that have formally closed or been administratively closed after 3 years of no filing or communication.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_end_date) as date, COUNT(*) as value WHERE dba_end_date >= last_year_start AND dba_end_date <= current_date AND naic_code_description = ''Retail Trade'' AND administratively_closed is null GROUP BY date ORDER BY date', 'SELECT ''Retail Closures'' as label, max(dba_end_date) as max_date, COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END) as this_year, COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END) as last_year, (COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND naic_code_description = ''Retail Trade'' AND administratively_closed is null THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district ', '', '', true, 'Closures', 'down', '[]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}, {"name": "business_corridor", "fieldName": "business_corridor", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 17, "original_category": "economy", "original_subcategory": "business", "original_subsubcategory": null}', 2, 19, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:05:13.51201', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (27, '🔒 Jail Bookings by Race', 'jail_bookings_race', 'Public Safety', '', '5zbm-xnsp', 'Count of jail bookings categorized by race', 'This metric represents the count of all jail bookings classified by race, providing insights into racial distribution in bookings.', 'https://data.sfgov.org/Public-Safety/Jail-Bookings-by-Race/n5ik-k4ny', 'SELECT date_trunc_ym(month_and_year_of_booking) as date, SUM(count_of_booking) as value WHERE month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Bookings by Race'' as label, max(month_and_year_of_booking) as max_date, SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) as this_year, SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END) as last_year, (SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END)) as delta, ((SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END)) * 100.0 / NULLIF(SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END), 0)) as perc_diff', 'Jail Bookings by Race', 'crime', false, 'Bookings', 'up', '[]', '[{"name": "race", "fieldName": "race", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-06-05 20:28:44.915283', '2025-08-05 13:19:32.144389', '2025-06-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (31, '👮 Police Spending', 'ytd_spending', 'efficiency', '', 'bpnb-jwfb', 'Year-to-Date (YTD) tracking of San Francisco Police Department spending by fiscal year', 'This metric calculates the total spending by the San Francisco Police Department (POL) for the current fiscal year, compares it with the spending of the previous fiscal year, and shows the difference in both absolute dollars and percentage.', 'https://data.sfgov.org/bpnb-jwfb', 'SELECT fiscal_year as date, SUM(amount) as value WHERE revenue_or_spending = ''Spending'' AND department_code = ''POL'' AND fiscal_year >= last_fiscal_year_start AND fiscal_year <= current_date GROUP BY date ORDER BY date', 'SELECT ''👮 Police Spending'' as label, max(fiscal_year) as max_date, SUM(CASE WHEN fiscal_year >= this_fiscal_year_start AND fiscal_year <= this_fiscal_year_end AND department_code = ''POL'' THEN amount END) as this_year, SUM(CASE WHEN fiscal_year >= last_fiscal_year_start AND fiscal_year <= last_fiscal_year_end AND department_code = ''POL'' THEN amount END) as last_year, (SUM(CASE WHEN fiscal_year >= this_fiscal_year_start AND fiscal_year <= this_fiscal_year_end AND department_code = ''POL'' THEN amount END) - SUM(CASE WHEN fiscal_year >= last_fiscal_year_start AND fiscal_year <= last_fiscal_year_end AND department_code = ''POL'' THEN amount END)) as delta, ((SUM(CASE WHEN fiscal_year >= this_fiscal_year_start AND fiscal_year <= this_fiscal_year_end AND department_code = ''POL'' THEN amount END) - SUM(CASE WHEN fiscal_year >= last_fiscal_year_start AND fiscal_year <= last_fiscal_year_end AND department_code = ''POL'' THEN amount END)) * 100.0 / NULLIF(SUM(CASE WHEN fiscal_year >= last_fiscal_year_start AND fiscal_year <= last_fiscal_year_end AND department_code = ''POL'' THEN amount END), 0)) as perc_diff WHERE revenue_or_spending = ''Spending''', 'Spending and Revenue', 'City Management and Ethics', true, 'Expenditures', 'down', '"[{ \"name\": \"department\", \"fieldName\": \"department\", \"description\": \"Department responsible for the spending\"}]"', '[{"name": "department", "fieldName": "department", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-07-08 21:43:56.638994', '2025-08-05 13:19:32.144389', NULL);
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (3, '🏠 Property Crime Incidents', 'property_property_crime_incidents_3', 'crime', 'Crime', 'wg3w-h783', '', 'Property crimes are defined as incidents categorized as: Arson, Burglary, Forgery And Counterfeiting, Fraud, Larceny Theft, Motor Vehicle Theft, Stolen Property, Vandalism, Embezzlement, and Recovered Vehicle.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') GROUP BY date ORDER BY date', 'SELECT ''Property Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', '', '', true, 'Incidents', 'down', '[]', '[{"name": "report_type_description", "fieldName": "report_type_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "incident_category", "fieldName": "incident_category", "description": "Selected column for enhanced dashboard queries"}, {"name": "incident_subcategory", "fieldName": "incident_subcategory", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 3, "original_category": "crime", "original_subcategory": "Crime", "original_subsubcategory": null}', 2, 3, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:54:40.31828', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (7, '⚖️ DA Convictions', 'convictions_da_convictions_7', 'crime', 'DA', 'ynfy-z5kt', 'Total count of criminal cases that resulted in a conviction, including guilty pleas and trial convictions.', 'Count of criminal cases prosecuted by the District Attorney''s Office that resulted in a conviction. This includes cases where the defendant pleaded guilty or was found guilty at trial. Each case represents a unique defendant and incident combination.', 'https://data.sfgov.org/Public-Safety/District-Attorney-Case-Resolutions/ynfy-z5kt', 'SELECT date_trunc_ymd(disposition_date) as date, COUNT(*) as value WHERE disposition_date >= last_year_start AND disposition_date <= current_date AND case_status LIKE ''%Conviction%''  GROUP BY date ORDER BY date', 'SELECT ''Total Convictions'' as label, max(disposition_date) as max_date, COUNT(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END) as this_year, COUNT(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END) as last_year, (COUNT(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END) - COUNT(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END)) as delta, ((COUNT(CASE WHEN disposition_date >= this_year_start AND disposition_date <= this_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END) - COUNT(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN disposition_date >= last_year_start AND disposition_date <= last_year_end AND case_status LIKE ''%Conviction%'' THEN 1 END), 0)) as perc_diff', 'DA ', 'crime', true, 'Convictions', 'up', '[]', '[{"name": "crime_type", "fieldName": "crime_type", "description": "Selected column for enhanced dashboard queries"}, {"name": "filed_case_type", "fieldName": "filed_case_type", "description": "Selected column for enhanced dashboard queries"}, {"name": "disposition_description", "fieldName": "disposition_description", "description": "Selected column for enhanced dashboard queries"}, {"name": "case_status", "fieldName": "case_status", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 7, "original_category": "crime", "original_subcategory": "DA", "original_subsubcategory": null}', 2, 1000, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:55:45.690108', '2025-08-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (37, '🚨 Violent Crime Incidents in Castro/Upper Market', 'violent_crime_incidents_castro_upper_market', 'crime', 'Crime', 'wg3w-h783', 'Count of reported violent crime incidents in the Castro/Upper Market area, including assaults, homicides, rapes, robberies, human trafficking, weapons offenses, and offenses against family/children.', 'Count of reported violent crime incidents in the Castro/Upper Market area. Violent crimes are defined as incidents categorized as: Assault, Homicide, Rape, Robbery, Human Trafficking (Commercial Sex Acts and Involuntary Servitude), Offences Against The Family And Children, and Weapons Offenses.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' GROUP BY date ORDER BY date', 'SELECT ''Violent Crime'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end AND Incident_Category IN (''Assault'', ''Homicide'', ''Rape'', ''Robbery'', ''Human Trafficking (A), Commercial Sex Acts'', ''Human Trafficking, Commercial Sex Acts'', ''Human Trafficking (B), Involuntary Servitude'', ''Offences Against The Family And Children'', ''Weapons Carrying Etc'', ''Weapons Offense'', ''Weapons Offence'') AND analysis_neighborhood = ''Castro/Upper Market'' THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', 'Police Department Incident Reports', 'Public Safety', false, 'Incidents', 'down', '[]', '[]', '{}', NULL, 1000, false, '2025-07-31 11:42:37.376953', '2025-08-05 13:19:32.144389', NULL);
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (8, '🚑 911 Response (minutes) - Danger to life', 'response_911_response_minutes_danger_to_life_10', 'safety', 'emergency_response', '2zdj-bwza', 'Average response time in minutes for Priority A emergency calls.', 'Measures the time between when a 911 call is received and when the first unit arrives on scene for Priority A (highest priority, danger to life) calls. Data comes from the Department of Emergency Management''s Computer Aided Dispatch (CAD) System. Only includes calls where both received and onscene times are recorded and valid.', 'https://data.sfgov.org/resource/2zdj-bwza.json', 'SELECT date_trunc_ymd(received_datetime) as date, AVG((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) as value WHERE received_datetime >= last_year_start AND received_datetime < current_date AND received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''A'' GROUP BY date ORDER BY date', 'SELECT ''Priority A Response Time'' as label, max(received_datetime) as max_date, AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as this_year, AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as last_year, (AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) as delta, ((AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) * 100.0 / NULLIF(AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END), 0)) as perc_diff, supervisor_district WHERE received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''A'' GROUP BY supervisor_district', '', '', true, 'Responses', 'down', '[]', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 10, "original_category": "safety", "original_subcategory": "emergency_response", "original_subsubcategory": null}', 2, 8, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:56:37.106122', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (19, '📞 311 Cases', 'cases_311_cases_18', 'safety', '311 cases', 'vw6y-z8j6', 'Total count of 311 cases reported.', 'Total count of 311 cases reported.', 'https://data.sfgov.org/City-Infrastructure/311-Cases/vw6y-z8j6', 'SELECT date_trunc_ymd(requested_datetime) as date, COUNT(*) as value WHERE requested_datetime >= last_year_start AND requested_datetime <= current_date GROUP BY date ORDER BY date', 'SELECT ''311 Cases'' as label, MAX(requested_datetime) as max_date, COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end THEN 1 END), 0)) as perc_diff, floor(supervisor_district) as supervisor_district GROUP BY floor(supervisor_district)', '311 cases', 'safety', false, 'Cases', 'down', '[]', '[{"name": "service_name", "fieldName": "service_name", "description": "Selected column for enhanced dashboard queries"}, {"name": "service_subtype", "fieldName": "service_subtype", "description": "Selected column for enhanced dashboard queries"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 18, "original_category": "311_cases", "original_subcategory": "311_cases", "original_subsubcategory": null}', 2, 20, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:59:37.552066', '2025-08-06');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (9, '🚑 911 Response (minutes) - Danger to property ', 'response_911_response_minutes_danger_to_property_11', 'safety', 'emergency_response', '2zdj-bwza', 'Average response time in minutes for Priority B emergency calls.', 'Measures the time between when a 911 call is received and when the first unit arrives on scene for Priority B (medium priority, danger to property) calls. Data comes from the Department of Emergency Management''s Computer Aided Dispatch (CAD) System. Only includes calls where both received and onscene times are recorded and valid.', 'https://data.sfgov.org/resource/2zdj-bwza.json', 'SELECT date_trunc_ymd(received_datetime) as date, AVG((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) as value WHERE received_datetime >= last_year_start AND received_datetime < current_date AND received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''B'' GROUP BY date ORDER BY date', 'SELECT ''Priority B Response Time'' as label, max(received_datetime) as max_date, AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as this_year, AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as last_year, (AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) as delta, ((AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) * 100.0 / NULLIF(AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END), 0)) as perc_diff, supervisor_district WHERE received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''B'' GROUP BY supervisor_district', 'Test', 'test', false, 'Responses', 'down', '[]', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 11, "original_category": "safety", "original_subcategory": "emergency_response", "original_subsubcategory": null}', 2, 21, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:00:56.972774', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (32, '📄 DA Charges Filed', 'da_charges_filed', 'crime', 'DA', 'czsm-3ei3', 'Total count of criminal charges filed by the District Attorney''s Office.', 'Count of cases where the District Attorney''s Office decided to file charges, based on arrests presented. This includes all cases marked as ''Charges Filed'' by the DA.', 'https://data.sfgov.org/Public-Safety/District-Attorney-Actions-Taken-on-Arrests-Presented/czsm-3ei3', 'SELECT date_trunc_ymd(arrest_date) as date, COUNT(*) as value WHERE arrest_date >= last_year_start AND arrest_date <= current_date AND da_action_taken LIKE ''Charges Filed'' GROUP BY date ORDER BY date', 'SELECT ''Total Charges Filed'' as label, max(arrest_date) as max_date, COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END) as this_year, COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END) as last_year, (COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END) - COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END)) as delta, ((COUNT(CASE WHEN arrest_date >= this_year_start AND arrest_date <= this_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END) - COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN arrest_date >= last_year_start AND arrest_date <= last_year_end AND da_action_taken LIKE ''Charges Filed'' THEN 1 END), 0)) as perc_diff', 'District Attorney Actions Taken on Arrests Presented', 'crime', true, 'Charges Filed', 'up', '[]', '[]', '{}', NULL, 7, true, '2025-07-14 21:04:21.132271', '2025-08-08 15:55:39.535464', '2025-08-02');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (40, '💀 Traffic Fatalities', 'traffic_fatalities', 'Traffic', '', 'dau3-4s8f', 'Count of traffic crashes resulting in death year-to-date', 'Traffic fatalities include all reported incidents of traffic crashes resulting in one or more deaths in San Francisco.', 'https://data.sfgov.org/resource/dau3-4s8f', 'SELECT COUNT(*) as value, date_trunc_ymd(collision_date) as date WHERE collision_date >= last_year_start AND collision_date < current_date GROUP BY date ORDER BY date', 'SELECT ''Traffic Fatalities'' as label, max(death_date) as max_date, COUNT(CASE WHEN death_date >= this_year_start AND death_date <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN death_date >= last_year_start AND death_date <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN death_date >= this_year_start AND death_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN death_date >= last_year_start AND death_date <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN death_date >= this_year_start AND death_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN death_date >= last_year_start AND death_date <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN death_date >= last_year_start AND death_date <= last_year_end THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', 'Traffic Crashes Resulting in Fatality', 'traffic', true, 'Incidents', 'down', '[]', '[{"name": "collision_type", "fieldName": "collision_type", "description": "Selected column for metric analysis"}, {"name": "analysis_neighborhood", "fieldName": "analysis_neighborhood", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-08-02 11:01:12.382742', '2025-08-08 16:02:51.281807', '2025-05-27');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (24, '🆘 Homeless Complaint 911 Calls', 'homeless_complaint_911_calls', 'safety', '', '2zdj-bwza', 'Count of homeless complaint-related 911 calls', 'Homeless Complaint 911 calls include all reported incidents associated with homeless complaints or related issues.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(received_datetime) as date, COUNT(*) as value WHERE received_datetime >= last_year_start AND received_datetime <= current_date AND call_type_final = ''915'' GROUP BY date ORDER BY date', 'SELECT ''Homeless Complaint 911 Calls'' as label, max(received_datetime) as max_date, COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final = ''915'' THEN 1 END) as this_year, COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final = ''915'' THEN 1 END) as last_year, (COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final = ''915'' THEN 1 END) - COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final = ''915'' THEN 1 END)) as delta, ((COUNT(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end AND call_type_final = ''915'' THEN 1 END) - COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final = ''915'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end AND call_type_final = ''915'' THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', 'Police Department Incident Reports', 'Public Safety', true, 'Calls', 'down', '"[{\"name\": \"supervisor_district\", \"fieldName\": \"supervisor_district\", \"description\": \"Supervisor district where the incident occurred\"}]"', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 11, true, '2025-06-01 18:08:04.507566', '2025-08-08 15:57:23.383469', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (1, '👮 Total Police Incidents', 'police_total_police_incidents_1', 'crime', 'Crime', 'wg3w-h783', 'Total count of all police incident reports filed by officers or self-reported by members of the public using SFPD''s online reporting system.', 'Total count of all police incident reports filed by officers or self-reported by members of the public using SFPD''s online reporting system.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(Report_Datetime) as date, COUNT(*) as value WHERE Report_Datetime >= last_year_start AND Report_Datetime <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Reports'' as label, max(Report_Datetime) as max_date, COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN Report_Datetime >= this_year_start AND Report_Datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN Report_Datetime >= last_year_start AND Report_Datetime <= last_year_end THEN 1 END), 0)) as perc_diff, supervisor_district group by supervisor_district', '', '', true, 'Incidents', 'down', '[]', '[{"name": "incident_category", "fieldName": "incident_category", "description": "Selected column for metric analysis"}, {"name": "incident_subcategory", "fieldName": "incident_subcategory", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{"id": 1, "original_category": "crime", "original_subcategory": "Crime", "original_subsubcategory": null}', 2, 1, true, '2025-05-27 20:34:15.325786', '2025-08-08 15:53:40.636572', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (20, '⛺ Encampment 311 Calls', 'encampment_encampment_calls_19', 'safety', '311_cases', 'vw6y-z8j6', 'Count of 311 cases related to encampments.', 'Count of 311 cases where the service subtype contains ''Encampment'' using uni-case filtering', 'https://data.sfgov.org/City-Infrastructure/311-Cases/vw6y-z8j6', 'SELECT date_trunc_ymd(requested_datetime) as date, COUNT(*) as value WHERE requested_datetime >= last_year_start AND requested_datetime <= current_date AND lower(service_subtype) LIKE ''%encampment%'' GROUP BY date ORDER BY date', 'SELECT ''Encampment Calls'' as label, MAX(requested_datetime) as max_date, COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END) as this_year, COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END) as last_year, (COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END)) as delta, ((COUNT(CASE WHEN requested_datetime >= this_year_start AND requested_datetime <= this_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END) - COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN requested_datetime >= last_year_start AND requested_datetime <= last_year_end AND lower(service_subtype) LIKE ''%encampment%'' THEN 1 END), 0)) as perc_diff, floor(supervisor_district) as supervisor_district GROUP BY floor(supervisor_district)', '311 cases', 'safety', false, 'Calls', 'down', '[{"name": "supervisor_district", "fieldName": "floor(supervisor_district)", "description": "Supervisor district where the issue was reported"}]', '[{"name": "service_name", "fieldName": "service_name", "description": "Selected column for metric analysis"}, {"name": "service_subtype", "fieldName": "service_subtype", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{"id": 19, "original_category": "311_cases", "original_subcategory": "311_cases", "original_subsubcategory": null}', 2, 1000, false, '2025-05-27 20:34:15.325786', '2025-08-05 13:19:32.144389', '2025-07-09');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (22, '🚑 911 Response (minutes) - No danger to life or property', 'response_911_response_minutes_no_danger_to_life_or_property_12', 'safety', 'emergency_response', '2zdj-bwza', 'Average response time in minutes for Priority C emergency calls.', 'Measures the time between when a 911 call is received and when the first unit arrives on scene for Priority C (lowest priority, no danger to life or property) calls. Data comes from the Department of Emergency Management''s Computer Aided Dispatch (CAD) System. Only includes calls where both received and onscene times are recorded and valid.', 'https://data.sfgov.org/resource/2zdj-bwza.json', 'SELECT date_trunc_ymd(received_datetime) as date, AVG((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) as value WHERE received_datetime >= last_year_start AND received_datetime < current_date AND received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''C'' GROUP BY date ORDER BY date', 'SELECT ''Priority C Response Time'' as label, max(received_datetime) as max_date, AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as this_year, AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) as last_year, (AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) as delta, ((AVG(CASE WHEN received_datetime >= this_year_start AND received_datetime <= this_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END) - AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END)) * 100.0 / NULLIF(AVG(CASE WHEN received_datetime >= last_year_start AND received_datetime <= last_year_end THEN ((date_extract_y(onscene_datetime) - date_extract_y(received_datetime)) * 525600 + (date_extract_m(onscene_datetime) - date_extract_m(received_datetime)) * 43800 + (date_extract_d(onscene_datetime) - date_extract_d(received_datetime)) * 1440 + (date_extract_hh(onscene_datetime) * 60 + date_extract_mm(onscene_datetime)) - (date_extract_hh(received_datetime) * 60 + date_extract_mm(received_datetime))) END), 0)) as perc_diff, supervisor_district WHERE received_datetime IS NOT NULL AND onscene_datetime IS NOT NULL AND received_datetime < onscene_datetime AND priority_final = ''C'' GROUP BY supervisor_district', '911 Call Response Data', 'safety', false, 'Responses', 'down', '[]', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for enhanced dashboard queries"}]', '{"id": 12, "original_category": "safety", "original_subcategory": "emergency_response", "original_subsubcategory": null}', 2, 22, true, '2025-05-27 20:34:15.325786', '2025-08-08 16:01:36.061502', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (28, '🔒 Jail Bookings by Ethnicity', 'jail_bookings_ethnicity', 'Public Safety', '', '36n6-w97s', 'Test update', 'This metric represents the count of all jail bookings classified by ethnicity, providing insights into ethnic distribution in bookings.', 'https://data.sfgov.org/Public-Safety/Jail-Bookings-by-Ethnicity/n5ik-k4ny', 'SELECT date_trunc_ym(month_and_year_of_booking) as date, SUM(count_of_booking) as value WHERE month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Bookings'' as label, max(month_and_year_of_booking) as max_date, SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) as this_year, SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END) as last_year, (SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END)) as delta, ((SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count_of_booking END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END)) * 100.0 / NULLIF(SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count_of_booking END), 0)) as perc_diff ', 'Jail Bookings by Ethnicity', 'crime', false, 'Bookings', 'up', '[]', '[{"name": "ethnicity", "fieldName": "ethnicity", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-06-05 20:28:44.942481', '2025-08-05 13:19:32.144389', '2025-06-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (26, '🔒 Jail Bookings by Gender', 'jail_bookings_gender', 'Public Safety', '', '2hgk-5bf6', 'Count of jail bookings categorized by gender', 'This metric represents the count of all jail bookings classified by gender, providing insights into gender distribution in bookings.', 'https://data.sfgov.org/Public-Safety/Jail-Bookings-by-Gender/n5ik-k4ny', 'SELECT date_trunc_ym(month_and_year_of_booking) as date, SUM(count) as value WHERE month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= current_date GROUP BY date ORDER BY date', 'SELECT ''Total Bookings'' as label, max(month_and_year_of_booking) as max_date, SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count END) as this_year, SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count END) as last_year, (SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count END)) as delta, ((SUM(CASE WHEN month_and_year_of_booking >= this_year_start AND month_and_year_of_booking <= this_year_end THEN count END) - SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count END)) * 100.0 / NULLIF(SUM(CASE WHEN month_and_year_of_booking >= last_year_start AND month_and_year_of_booking <= last_year_end THEN count END), 0)) as perc_diff', 'Jail Bookings by Gender', 'Public Safety', false, 'Bookings', 'up', '[]', '[{"name": "male_female", "fieldName": "male_female", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-06-05 20:28:44.872327', '2025-08-05 13:19:32.144389', '2025-06-01');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (38, '🚸 Traffic Injuries', 'traffic_injuries', 'Traffic', '', 'ubvf-ztfx', 'Count of traffic crashes resulting in injury year-to-date', 'Traffic injuries include all reported incidents of traffic crashes resulting in one or more injuries in San Francisco.', 'https://data.sfgov.org/Public-Safety/Traffic-Crashes-Resulting-in-Injury/ubvf-ztfx', 'SELECT sum(number_injured) as value, date_trunc_ymd(collision_date) as date WHERE collision_date >= last_year_start AND collision_date < current_date group by date order by date', 'SELECT ''Traffic Injuries'' as label, max(collision_date) as max_date, COUNT(CASE WHEN collision_date >= this_year_start AND collision_date <= this_year_end AND number_injured > 0 THEN 1 END) as this_year, COUNT(CASE WHEN collision_date >= last_year_start AND collision_date <= last_year_end AND number_injured > 0 THEN 1 END) as last_year, (COUNT(CASE WHEN collision_date >= this_year_start AND collision_date <= this_year_end AND number_injured > 0 THEN 1 END) - COUNT(CASE WHEN collision_date >= last_year_start AND collision_date <= last_year_end AND number_injured > 0 THEN 1 END)) as delta, ((COUNT(CASE WHEN collision_date >= this_year_start AND collision_date <= this_year_end AND number_injured > 0 THEN 1 END) - COUNT(CASE WHEN collision_date >= last_year_start AND collision_date <= last_year_end AND number_injured > 0 THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN collision_date >= last_year_start AND collision_date <= last_year_end AND number_injured > 0 THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', 'Traffic Crashes Resulting in Injury', 'traffic', true, 'Incidents', 'down', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Supervisor district where the crash occurred"}, {"name": "police_district", "fieldName": "police_district", "description": "Police district where the crash occurred"}]', '[{"name": "collision_severity", "fieldName": "collision_severity", "description": "Selected column for metric analysis"}, {"name": "type_of_collision", "fieldName": "type_of_collision", "description": "Selected column for metric analysis"}, {"name": "analysis_neighborhood", "fieldName": "analysis_neighborhood", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-07-31 12:25:48.318322', '2025-08-08 16:03:16.065022', '2025-06-30');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (41, '🏳️‍🌈 Upper Market Corridor Violent Crime', 'upper_market_corridor_violent_crime', 'crime', '', 'wg3w-h783', 'Violent crime incidents within the Upper Market/Castro corridor (Market St from Van Ness to Castro — 200 ft north, 100 ft south)', 'Count of violent crime incidents including assault, homicide, rape, robbery, human trafficking, offenses against family/children, and weapons offenses occurring within the Upper Market/Castro corridor geographic boundary', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(incident_datetime) as date, COUNT(*) as value WHERE incident_datetime >= last_year_start AND incident_datetime <= current_date AND (incident_category = ''Assault'' OR incident_category = ''Homicide'' OR incident_category = ''Rape'' OR incident_category = ''Robbery'' OR incident_category = ''Human Trafficking (A), Commercial Sex Acts'' OR incident_category = ''Human Trafficking, Commercial Sex Acts'' OR incident_category = ''Offences Against The Family And Children'' OR incident_category = ''Weapons Offence'') AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'') GROUP BY date ORDER BY date', 'SELECT ''Upper Market Corridor Violent Crime'' as label, max(incident_datetime) as max_date, COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END), 0)) as perc_diff WHERE (incident_category = ''Assault'' OR incident_category = ''Homicide'' OR incident_category = ''Rape'' OR incident_category = ''Robbery'' OR incident_category = ''Human Trafficking (A), Commercial Sex Acts'' OR incident_category = ''Human Trafficking, Commercial Sex Acts'' OR incident_category = ''Offences Against The Family And Children'' OR incident_category = ''Weapons Offence'') AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'')', 'Police Department Incident Reports', 'Public Safety', false, 'Incidents', 'down', '[]', '[{"name": "incident_category", "fieldName": "incident_category", "description": "Selected column for metric analysis"}, {"name": "incident_subcategory", "fieldName": "incident_subcategory", "description": "Selected column for metric analysis"}, {"name": "incident_description", "fieldName": "incident_description", "description": "Selected column for metric analysis"}, {"name": "resolution", "fieldName": "resolution", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-08-11 14:31:38.013228', '2025-08-11 14:53:15.442031', '2025-08-05');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (42, '🏳️‍🌈 Upper Market Corridor Property Crime', 'upper_market_property_crime', 'crime', '', 'wg3w-h783', 'Property crime incidents (burglary, theft, vandalism, etc.) along Market St from Van Ness to Castro — 200 ft north, 100 ft south', 'Property crimes include all incidents involving theft or damage to property: Arson, Burglary, Forgery And Counterfeiting, Fraud, Larceny Theft, Motor Vehicle Theft, Stolen Property, Vandalism, Embezzlement, and Recovered Vehicle incidents.', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(incident_datetime) as date, COUNT(*) as value WHERE incident_datetime >= last_year_start AND incident_datetime <= current_date AND Incident_Category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'') GROUP BY date ORDER BY date', 'SELECT COUNT(*) as count FROM data WHERE incident_category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') AND incident_date >= DATE_TRUNC(''month'', CURRENT_DATE) AND incident_date < CURRENT_DATE AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'')', '', '', true, 'Items', 'up', '[]', '[]', '{}', NULL, 1000, false, '2025-08-11 14:56:19.603797', '2025-08-11 14:58:49.657406', NULL);
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (43, '🏳️‍🌈 Upper Market Corridor Property Crime', 'upper_market_corridor_property_crime', 'crime', '', 'wg3w-h783', 'Property crime incidents within the Upper Market/Castro corridor (Market St from Van Ness to Castro — 200 ft north, 100 ft south)', 'Count of reported property crime incidents (Arson, Burglary, Forgery & Counterfeiting, Fraud, Larceny Theft, Motor Vehicle Theft, Stolen Property, Vandalism, Embezzlement, Recovered Vehicle) occurring within the Upper Market/Castro corridor geographic boundary', 'https://data.sfgov.org/Public-Safety/Police-Department-Incident-Reports-2018-to-Present/wg3w-h783', 'SELECT date_trunc_ymd(incident_datetime) as date, COUNT(*) as value WHERE incident_datetime >= last_year_start AND incident_datetime <= current_date AND incident_category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'') GROUP BY date ORDER BY date', 'SELECT ''Upper Market Corridor Property Crime'' as label, max(incident_datetime) as max_date, COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN incident_datetime >= this_year_start AND incident_datetime <= this_year_end THEN 1 END) - COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN incident_datetime >= last_year_start AND incident_datetime <= last_year_end THEN 1 END), 0)) as perc_diff WHERE incident_category IN (''Arson'', ''Burglary'', ''Forgery And Counterfeiting'', ''Fraud'', ''Larceny Theft'', ''Motor Vehicle Theft'', ''Stolen Property'', ''Vandalism'', ''Embezzlement'', ''Recovered Vehicle'') AND within_polygon(point, ''MULTIPOLYGON (((-122.43509269775069 37.763308911953075, -122.41972369775068 37.775351911953074, -122.41899215112466 37.77476854402346, -122.43436115112466 37.76272554402346, -122.43509269775069 37.763308911953075)))'')', 'Police Department Incident Reports', 'Public Safety', false, 'Incidents', 'down', '[]', '[]', '{}', NULL, 1000, true, '2025-08-11 15:10:41.533226', '2025-08-11 15:10:59.654849', '2025-08-09');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (14, '🏢 New Business Registrations', 'business_new_business_registrations_14', 'economy', 'business', 'g8m3-pdis', 'Count of new business registrations in San Francisco.', 'Tracks new business registrations through the Treasurer & Tax Collector''s Office. Each registered business may have multiple locations. Data is collected through business registration applications and account updates.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_start_date) as date, COUNT(*) as value WHERE dba_start_date >= last_year_start AND dba_start_date <= current_date GROUP BY date ORDER BY date', 'SELECT ''New Business Registrations'' as label, max(dba_start_date) as max_date, COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', '', '', true, 'Registrations', 'up', '[]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Selected column for metric analysis"}, {"name": "lic", "fieldName": "lic", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}, {"name": "business_corridor", "fieldName": "business_corridor", "description": "Selected column for metric analysis"}]', '{"id": 14, "original_category": "economy", "original_subcategory": "business", "original_subsubcategory": null}', 2, 16, true, '2025-05-27 20:34:15.325786', '2025-08-11 15:21:58.88515', '2025-08-07');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (34, '📸 Camera Citations', 'camera_citations', 'Traffic', '', 'uzmr-g2uc', 'Monthly total of red light camera citations in San Francisco.', 'This metric summarizes the total citations from red light cameras across San Francisco, grouped and ordered by month, illustrating trends in traffic violations captured by automated enforcement.', 'https://data.sfgov.org/Public-Safety/Red-Light-Camera-Citations/uzmr-g2uc', 'SELECT date_trunc_ym(month) as date, SUM(count) as value WHERE month >= last_year_start AND month <= current_date GROUP BY date order by date', 'SELECT ''Camera Citations'' as label, MAX(date_trunc_ym(month)) as max_date, SUM(CASE WHEN month >= this_year_start AND month <= this_year_end THEN count ELSE 0 END) as this_year, SUM(CASE WHEN month >= last_year_start AND month <= last_year_end THEN count ELSE 0 END) as last_year, (SUM(CASE WHEN month >= this_year_start AND month <= this_year_end THEN count ELSE 0 END) - SUM(CASE WHEN month >= last_year_start AND month <= last_year_end THEN count ELSE 0 END)) as delta, ((SUM(CASE WHEN month >= this_year_start AND month <= this_year_end THEN count ELSE 0 END) - SUM(CASE WHEN month >= last_year_start AND month <= last_year_end THEN count ELSE 0 END)) * 100.0 / NULLIF(SUM(CASE WHEN month >= last_year_start AND month <= last_year_end THEN count ELSE 0 END), 0)) as perc_diff, supervisor_district GROUP BY supervisor_district', 'Red Light Camera Citations', 'Public Safety', true, 'Citations', 'down', '[]', '[{"name": "violation_type", "fieldName": "violation_type", "description": "Selected column for metric analysis"}, {"name": "analysis_neighborhood", "fieldName": "analysis_neighborhood", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-07-18 13:33:32.813969', '2025-08-12 10:29:01.395687', '2025-08-10');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (45, '🏳️‍🌈 Castro/ Upper Market Business Closings', 'upper_market_corridor_business_closures', 'economy', 'business', 'g8m3-pdis', 'Count of business closures in the Castro/Upper Market neighborhood.', 'Tracks business closures in the Castro/Upper Market area using the neighborhoods_analysis_boundaries field. This provides a cleaner geographic boundary than the previous multi-polygon approach and aligns with the city''s official neighborhood designations. Excludes administratively closed businesses to focus on actual business closures.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_end_date) as date, COUNT(*) as value WHERE dba_end_date >= last_year_start AND dba_end_date <= current_date AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null GROUP BY date ORDER BY date', 'SELECT ''Upper Market Corridor Business Closures'' as label, max(dba_end_date) as max_date, COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END) as this_year, COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END) as last_year, (COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null THEN 1 END), 0)) as perc_diff WHERE neighborhoods_analysis_boundaries = ''Castro/Upper Market'' AND administratively_closed is null', 'Registered Business Locations', 'business', false, 'Items', 'up', '[]', '[]', '{}', NULL, 1000, true, '2025-08-11 16:22:45.706142', '2025-08-12 18:17:51.691804', NULL);
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (46, '🇮🇹 Business Openings - North Beach', 'business_openings_north_beach', 'economy', 'business', 'g8m3-pdis', 'Count of new business registrations in the North Beach neighborhood.', 'Tracks new business registrations in North Beach through the Treasurer & Tax Collector''s Office. Businesses are filtered by their neighborhood location using analysis boundaries.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_start_date) as date, COUNT(*) as value WHERE dba_start_date >= last_year_start AND dba_start_date <= current_date AND neighborhoods_analysis_boundaries = ''North Beach'' GROUP BY date ORDER BY date', 'SELECT ''North Beach Business Openings'' as label, max(dba_start_date) as max_date, COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) as this_year, COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END) as last_year, (COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end THEN 1 END), 0)) as perc_diff WHERE neighborhoods_analysis_boundaries = ''North Beach''', 'Registered Business Locations', 'Economy', false, 'Businesses', 'up', '[]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Selected column for metric analysis"}, {"name": "lic_code_description", "fieldName": "lic_code_description", "description": "Selected column for metric analysis"}, {"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Selected column for metric analysis"}, {"name": "business_corridor", "fieldName": "business_corridor", "description": "Selected column for metric analysis"}]', '{}', NULL, 1000, true, '2025-08-12 11:53:50.701311', '2025-08-12 14:04:39.412898', '2025-07-24');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (44, '🏳️‍🌈 Castro/ Upper Market Business Openings', 'upper_market_corridor_business_openings', 'economy', 'business', 'g8m3-pdis', 'Count of new business registrations in the Castro/Upper Market neighborhood.', 'Tracks new business registrations in the Castro/Upper Market area using the neighborhoods_analysis_boundaries field. This provides a cleaner geographic boundary than the previous multi-polygon approach and aligns with the city''s official neighborhood designations.', 'https://data.sfgov.org/resource/g8m3-pdis.json', 'SELECT date_trunc_ymd(dba_start_date) as date, COUNT(*) as value WHERE dba_start_date >= last_year_start AND dba_start_date <= current_date AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' GROUP BY date ORDER BY date', 'SELECT ''Upper Market Corridor Business Openings'' as label, max(dba_start_date) as max_date, COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END) as this_year, COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END) as last_year, (COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_start_date >= this_year_start AND dba_start_date <= this_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END) - COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_start_date >= last_year_start AND dba_start_date <= last_year_end AND neighborhoods_analysis_boundaries = ''Castro/Upper Market'' THEN 1 END), 0)) as perc_diff WHERE neighborhoods_analysis_boundaries = ''Castro/Upper Market''', 'Registered Business Locations', 'Economy', false, 'Items', 'up', '[]', '[]', '{}', NULL, 1000, true, '2025-08-11 16:22:33.221826', '2025-08-12 18:17:51.691795', '2025-07-03');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (47, '🏁 Business Closings - North Beach', 'business_closings_north_beach', 'economy', 'business', 'g8m3-pdis', 'Business closures in North Beach neighborhood, excluding administrative closures', 'Count of businesses that have closed in North Beach neighborhood (using neighborhoods_analysis_boundaries). This excludes businesses that were administratively closed after 3 years of inactivity, focusing only on actual business closure decisions.', 'https://data.sfgov.org/Economy-and-Community/Registered-Business-Locations-San-Francisco/g8m3-pdis', 'SELECT date_trunc_ymd(dba_end_date) as date, COUNT(*) as value WHERE dba_end_date >= last_year_start AND dba_end_date <= current_date AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null GROUP BY date ORDER BY date', 'SELECT ''Business Closures'' as label, max(dba_end_date) as max_date, COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END) as this_year, COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END) as last_year, (COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END)) as delta, ((COUNT(CASE WHEN dba_end_date >= this_year_start AND dba_end_date <= this_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END) - COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END)) * 100.0 / NULLIF(COUNT(CASE WHEN dba_end_date >= last_year_start AND dba_end_date <= last_year_end AND neighborhoods_analysis_boundaries = ''North Beach'' AND administratively_closed is null THEN 1 END), 0)) as perc_diff', 'Registered Business Locations - San Francisco', 'Economy and Community', false, 'Closings', 'down', '[]', '[]', '{}', NULL, 1000, true, '2025-08-12 11:56:46.144533', '2025-08-12 14:04:29.681447', '2025-08-11');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (48, '🏮 Chinatown Business Closures', 'chinatown_business_closures_combined', 'economy', '', 'g8m3-pdis', 'Count of business closures and location closures in Chinatown. Includes both businesses completely shutting down and businesses closing specific locations.', 'Count of business closures (dba_end_date) and location-only closures (location_end_date where business continues elsewhere). This comprehensive approach captures all business closing activity in Chinatown.', 'https://data.sfgov.org/Economy-and-Community/Registered-Business-Locations-San-Francisco/g8m3-pdis', 'SELECT date_trunc_ymd(CASE WHEN dba_end_date >= last_year_start THEN dba_end_date ELSE location_end_date END) as date, COUNT(*) as value
WHERE ((dba_end_date >= last_year_start AND dba_end_date <= current_date) OR (location_end_date >= last_year_start AND location_end_date <= current_date AND (dba_end_date IS NULL OR dba_end_date > current_date)))
AND neighborhoods_analysis_boundaries LIKE ''%Chinatown%''
GROUP BY date ORDER BY date', 'SELECT ''Chinatown Closures'' as label,
       MAX(GREATEST(dba_end_date, location_end_date)) as max_date,
       COUNT(CASE WHEN (dba_end_date >= this_year_start AND dba_end_date <= this_year_end) OR (location_end_date >= this_year_start AND location_end_date <= this_year_end AND (dba_end_date IS NULL OR dba_end_date > this_year_end)) THEN 1 END) as this_year,
       COUNT(CASE WHEN (dba_end_date >= last_year_start AND dba_end_date <= last_year_end) OR (location_end_date >= last_year_start AND location_end_date <= last_year_end AND (dba_end_date IS NULL OR dba_end_date > last_year_end)) THEN 1 END) as last_year,
       (COUNT(CASE WHEN (dba_end_date >= this_year_start AND dba_end_date <= this_year_end) OR (location_end_date >= this_year_start AND location_end_date <= this_year_end AND (dba_end_date IS NULL OR dba_end_date > this_year_end)) THEN 1 END) - 
        COUNT(CASE WHEN (dba_end_date >= last_year_start AND dba_end_date <= last_year_end) OR (location_end_date >= last_year_start AND location_end_date <= last_year_end AND (dba_end_date IS NULL OR dba_end_date > last_year_end)) THEN 1 END)) as delta,
       ((COUNT(CASE WHEN (dba_end_date >= this_year_start AND dba_end_date <= this_year_end) OR (location_end_date >= this_year_start AND location_end_date <= this_year_end AND (dba_end_date IS NULL OR dba_end_date > this_year_end)) THEN 1 END) - 
         COUNT(CASE WHEN (dba_end_date >= last_year_start AND dba_end_date <= last_year_end) OR (location_end_date >= last_year_start AND location_end_date <= last_year_end AND (dba_end_date IS NULL OR dba_end_date > last_year_end)) THEN 1 END)) * 100.0 / 
         NULLIF(COUNT(CASE WHEN (dba_end_date >= last_year_start AND dba_end_date <= last_year_end) OR (location_end_date >= last_year_start AND location_end_date <= last_year_end AND (dba_end_date IS NULL OR dba_end_date > last_year_end)) THEN 1 END), 0)) as perc_diff
WHERE neighborhoods_analysis_boundaries LIKE ''%Chinatown%''', 'Registered Business Locations', 'Economy and Community', true, 'Closures', 'down', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Supervisor district"}, {"name": "neighborhoods_analysis_boundaries", "fieldName": "neighborhoods_analysis_boundaries", "description": "Neighborhood name"}]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Business category/industry"}, {"name": "closure_type", "fieldName": "CASE WHEN dba_end_date IS NOT NULL THEN ''Business Entity Closure'' ELSE ''Location Closure'' END", "description": "Type of closure - business entity vs location only"}]', '{}', NULL, 1000, true, '2025-08-13 12:01:37.630552', '2025-08-13 21:14:01.743247', '2025-08-03');
INSERT INTO public.metrics (id, metric_name, metric_key, category, subcategory, endpoint, summary, definition, data_sf_url, ytd_query, metric_query, dataset_title, dataset_category, show_on_dash, item_noun, greendirection, location_fields, category_fields, metadata, city_id, display_order, is_active, created_at, updated_at, most_recent_data_date) VALUES (49, '🏮 Chinatown Business Openings', 'chinatown_business_openings_combined', 'economy', '', 'g8m3-pdis', 'Count of new business registrations and location expansions in Chinatown. Includes both new businesses entering the market and existing businesses opening new locations.', 'Count of new business registrations (dba_start_date) and location expansions (location_start_date for existing businesses). This comprehensive approach captures all business opening activity in Chinatown.', 'https://data.sfgov.org/Economy-and-Community/Registered-Business-Locations-San-Francisco/g8m3-pdis', 'SELECT date_trunc_ymd(CASE WHEN dba_start_date >= last_year_start THEN dba_start_date ELSE location_start_date END) as date, COUNT(*) as value
WHERE ((dba_start_date >= last_year_start AND dba_start_date <= current_date) OR (location_start_date >= last_year_start AND location_start_date <= current_date AND dba_start_date < last_year_start))
AND neighborhoods_analysis_boundaries LIKE ''%Chinatown%''
GROUP BY date ORDER BY date', 'SELECT ''Chinatown Openings'' as label,
       COUNT(CASE WHEN (dba_start_date >= this_year_start AND dba_start_date <= this_year_end) OR (location_start_date >= this_year_start AND location_start_date <= this_year_end AND dba_start_date < this_year_start) THEN 1 END) as this_year,
       COUNT(CASE WHEN (dba_start_date >= last_year_start AND dba_start_date <= last_year_end) OR (location_start_date >= last_year_start AND location_start_date <= last_year_end AND dba_start_date < last_year_start) THEN 1 END) as last_year
WHERE neighborhoods_analysis_boundaries LIKE ''%Chinatown%''', 'Registered Business Locations', 'Economy and Community', true, 'Openings', 'up', '[{"name": "supervisor_district", "fieldName": "supervisor_district", "description": "Supervisor district"}, {"name": "neighborhoods_analysis_boundaries", "fieldName": "neighborhoods_analysis_boundaries", "description": "Neighborhood name"}]', '[{"name": "naic_code_description", "fieldName": "naic_code_description", "description": "Business category/industry"}, {"name": "opening_type", "fieldName": "CASE WHEN dba_start_date >= this_year_start THEN ''New Business Registration'' ELSE ''New Location Opening'' END", "description": "Type of opening - new business vs new location"}]', '{}', NULL, 1000, true, '2025-08-13 12:02:05.60476', '2025-08-13 20:49:27.692447', '2025-08-11');


--
-- Name: metrics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.metrics_id_seq', 49, true);


--
-- Name: metrics metrics_metric_key_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metrics
    ADD CONSTRAINT metrics_metric_key_key UNIQUE (metric_key);


--
-- Name: metrics metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.metrics
    ADD CONSTRAINT metrics_pkey PRIMARY KEY (id);


--
-- Name: metrics_active_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_active_idx ON public.metrics USING btree (is_active);


--
-- Name: metrics_category_display_order_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_category_display_order_idx ON public.metrics USING btree (category, display_order);


--
-- Name: metrics_category_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_category_idx ON public.metrics USING btree (category);


--
-- Name: metrics_city_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_city_id_idx ON public.metrics USING btree (city_id);


--
-- Name: metrics_display_order_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_display_order_idx ON public.metrics USING btree (display_order);


--
-- Name: metrics_endpoint_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_endpoint_idx ON public.metrics USING btree (endpoint);


--
-- Name: metrics_most_recent_data_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_most_recent_data_date_idx ON public.metrics USING btree (most_recent_data_date);


--
-- Name: metrics_show_on_dash_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_show_on_dash_idx ON public.metrics USING btree (show_on_dash);


--
-- Name: metrics_subcategory_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX metrics_subcategory_idx ON public.metrics USING btree (subcategory);


--
-- Name: metrics update_metrics_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_metrics_updated_at BEFORE UPDATE ON public.metrics FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- PostgreSQL database dump complete
--

